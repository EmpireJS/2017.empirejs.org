$breakpoints: (
  "only screen and (max-width:#{$palm-end})" "palm",
  "only screen and (min-width:#{$lap-start}) and (max-width:#{$lap-end})" "lap",
  "only screen and (min-width:#{$lap-start})" "lap-and-up",
  "only screen and (max-width:#{$lap-end})" "portable",
  "only screen and (min-width:#{$desk-start})" "desk"
);

@mixin breakpoint($point) {
  @each $breakpoint in $breakpoints {
    $query: nth($breakpoint, 1);
    $name: nth($breakpoint, 2);
    @if ($name == $point) {
      @media #{$query} { @content }
    }
  }
}

.grid {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

.grid--grow {
  flex-flow: row wrap;
  .grid__cell { flex-grow: 1; }
}

.grid__cell {
  flex: 1;
}

.grid--flexCells {
  & > .grid__cell {
    display: flex;
  }
}

.grid--center {
  justify-content: center;
}
.grid--split {
  justify-content: space-between;
}
.grid--top {
  align-items: flex-start;
}

.grid--bottom {
  align-items: flex-end;
}

.grid--middle {
  align-items: center;
}

.grid__cell--top {
  align-self: flex-start;
}

.grid__cell--bottom {
  align-self: flex-end;
}

.grid__cell--center {
  align-self: center;
}

@mixin grid-cell-setup($namespace: "") {
  .#{$namespace}grid__cell--full {
    width: 100% !important;
    flex: none !important;
    .grid--gutters > & { padding: 0; }
  }
  .#{$namespace}grid__cell--one-half {
    width: 50% !important;
    flex: none !important;
  }
  .#{$namespace}grid__cell--one-third {
    width: 33.3333% !important;
    flex: none !important;
  }
  .#{$namespace}grid__cell--two-thirds {
    width: 66.6667% !important;
    flex: none !important;
  }
  .#{$namespace}grid__cell--one-quarter {
    width: 25% !important;
    flex: none !important;
  }
  .#{$namespace}grid__cell--three-quarters {
    width: 75% !important;
    flex: none !important;
  }
}

// create the default grid-gutters modifiers
@include grid-cell-setup();

@mixin grid-gutters($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "";
  }
  .#{$name}#{$sep}grid--gutters {
    margin-left: -1em;
    & > .grid__cell {
      padding-left: 1em;
    }
  }
  .#{$name}#{$sep}grid--guttersLarge {
    margin-left: -1.5em;
    & > .grid__cell {
      padding-left: 1.5em;
    }
  }
  .#{$name}#{$sep}grid--gutters2x {
    margin-left: -2em;
    & > .grid__cell {
      padding-left: 2em;
    }
  }
  .#{$name}#{$sep}grid--gutters3x {
    margin-left: -3em;
    & > .grid__cell {
      padding-left: 3em;
    }
  }
}

// create the default grid-gutters modifiers
@include grid-gutters();

// create grid-gutters modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-gutters("#{$name}-");
    @include grid-cell-setup("#{$name}-");
  }
}

// Firefox doesn't yet support multiline Flexboxes so we
// have to fake it. Remove this once this bug is resolved
// https://bugzilla.mozilla.org/show_bug.cgi?id=702508
@supports not (flex-wrap: wrap) {
  .grid--ffMultilineSupport {
    display: block;
    & > .grid__cell {
      display: inline-block;
      vertical-align: top;
    }
  }
}